package org.basics.fourproblems;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class AverageCalculation {

	public static void main(String[] args) {
	Scanner sc=new Scanner(System.in);
	System.out.println("Enter number of decimals allowed: ");
	int n=sc.nextInt();
	System.out.println("Enter the number of subjects: ");
	int NoOfSubjects=sc.nextInt();
	
	
	List<Float> Subjects=new ArrayList<>();
	Float mark,Average, correctedDecimalPlace;
	int roundedOff=0;
	
	while(Subjects.size()<NoOfSubjects) {
		mark=sc.nextFloat();
		if(isValid(mark,n))
			Subjects.add(mark);
		else
			continue;	
		
	}
	
	System.out.println("Round off needed? [yes/no]: ");
	String isRoundOff=sc.next();
	Average=averageCal(Subjects);
	System.out.println("Output without roundoff and multiple decimal places = "+Average);
	
	if(isRoundOff.equalsIgnoreCase("yes"))
	{
	roundedOff = RoundedOffValue(Average);
	System.out.println("Rounded off Average is = "+roundedOff);
	}
	
	else if(isRoundOff.equalsIgnoreCase("no"))
	{
	correctedDecimalPlace=	CorrectedValue(Average,n);
	System.out.println("Rounded off Average is = "+correctedDecimalPlace);
	}

	}


	private static boolean isValid(Float mark, int n) {
		boolean isValid=true;
	
		String[] DecimalSplit=Float.toString(mark).split("\\.");

		if(DecimalSplit.length!=1&&DecimalSplit[1].length()>n)
		{
			System.out.println("Please Re-enter the mark correctly");
			isValid=false;
		}

		return isValid;
	}

	private static Float averageCal(List<Float> subjects) {
		Float TotalMarks=0.0f,Avg=0.0f;
		
		for(Float f:subjects)
		{
			TotalMarks=f+TotalMarks;
		}
		Avg=TotalMarks/subjects.size();

		return Avg;
	}
	

	private static int RoundedOffValue(Float average) {
		int RoundedValue=0;
		String[] AverageSplit=Float.toString(average).split("\\.");
		if(AverageSplit.length!=1)
		{
			Integer FirstDecimalPlace=Integer.parseInt((AverageSplit[1].substring(0,1)));
			if(FirstDecimalPlace>=5)
				RoundedValue=Integer.parseInt(AverageSplit[0])+1;
			else
				RoundedValue=Integer.parseInt(AverageSplit[0]);
		}
		else
			RoundedValue=Integer.parseInt(AverageSplit[0]);
		return RoundedValue;

	}
	

	private static Float CorrectedValue(Float average, int n) {
		Float CorrectedVal;
		String[] AverageSplit=Float.toString(average).split("\\.");
		
		if(AverageSplit[1].length()>n)
		{
		CorrectedVal=Float.parseFloat(AverageSplit[0].concat(".").concat(AverageSplit[1].substring(0,n)));		
		}
		else
		CorrectedVal=Float.parseFloat(AverageSplit[0].concat(".").concat(AverageSplit[1]));
		
		return CorrectedVal;
	}
}
