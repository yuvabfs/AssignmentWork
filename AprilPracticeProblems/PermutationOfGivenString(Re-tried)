package dailyprograms.java;

import java.util.ArrayList;
import java.util.List;

public class PermutationOfString {

	public static void main(String[] args) {


		String input="ABCD";
		
		if(input.length()==0 || input.equals(null))
		{
			System.out.println("No possible permuation");
		}
		else 
		{
			List<List<String>> totalPermutationList=new ArrayList<>();
			int characterPointer=0;
			
			
			
			
			while(characterPointer<input.length())
			{
				int tptSize=totalPermutationList.size();
				System.out.println(characterPointer);
				String characterTaken=Character.toString(input.charAt(characterPointer));
				if(tptSize>0)
				{
					System.out.println("tptSize"+tptSize);
					List<String> tempList=totalPermutationList.get(tptSize-1);
					List<String> permutationOutput=new ArrayList<>();
					
					for(int i=0;i<tempList.size();i++)
					{
						
						String stringTempElement=new String(tempList.get(i));
						
						//System.out.println("stringTempElement"+stringTempElement);
						
						for(int j=0;j<stringTempElement.length()+1;j++)
						{
							
							StringBuffer stringTovary=new StringBuffer(stringTempElement);
							
							permutationOutput.add(stringTovary.insert(j,characterTaken).toString());
						}
						
					}
					totalPermutationList.add(permutationOutput);
				}
				else
				{
					List<String> permutationOutput=new ArrayList<>();
					
					permutationOutput.add(characterTaken);
					totalPermutationList.add(permutationOutput);
					
					
				}
				
					characterPointer++;
					System.out.println(totalPermutationList);
					System.out.println(totalPermutationList.get(totalPermutationList.size()-1).size());

			}
			
			
		}
		
		
	}

}
